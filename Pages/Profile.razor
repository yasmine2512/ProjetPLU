@page "/profile"
@layout MainLayout
@inject UserState UserState



<div class="profile-container">
    <div class="profile-card">
  <!-- Profile Image -->
    <img src="@UserImage" alt="Profile Picture" class="profile-img" />

    <h4><strong> @UserState.CurrentUser.FullName </strong></h4>
 
         <!-- File input and label (styled as a button) -->
    <div class="mt-3">
        <label for="fileInput" class="btn btn-outline-primary">Change Picture</label>
        <input id="fileInput" type="file" @onchange="HandleImageChange" style="display: none;" accept="image/*" />
    </div>
     <div class="mt-4">
            <p><strong>University:</strong> @UserState.CurrentUser.University</p>
            <p><strong>Major:</strong> @UserState.CurrentUser.Major</p>
            <p><strong>Specialty:</strong> @UserState.CurrentUser?.Specialty</p>
 
        </div>

       
    </div>

    @if (UserState.CurrentUser.Role == "Administrator")
    {
        @* <div class="thesis-section">
            <h3>Your Theses</h3>
            @if (User.PostedTheses is not null && User.PostedTheses.Any())
            {
                <ul class="thesis-list">
                    @foreach (var thesis in UserState.PostedTheses)
                    {
                        <li>
                            <strong>@thesis.Title</strong><br />
                            <small>@thesis.Date.ToShortDateString() â€” @thesis.Field</small>
                        </li>
                    }
                </ul>
            }
            else
            {
                <p class="empty">You haven't posted any theses yet.</p>
            }
        </div> *@
    }
</div>

@code {
  private string UserImage = "emptyimage.jpg"; // Default image

    private async Task HandleImageChange(ChangeEventArgs e)
    {
        if (e.Value is not null && e.Value is IBrowserFile file)
        {
            using var stream = file.OpenReadStream(1024 * 1024);
            var buffer = new byte[file.Size];
            await stream.ReadAsync(buffer);
            var base64 = Convert.ToBase64String(buffer);
            UserImage = $"data:{file.ContentType};base64,{base64}";
        }
    }
   }
