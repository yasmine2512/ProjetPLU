@page "/profile/{userId:int}"
@layout MainLayout
@inject HttpClient Http
@using System.Text.Json
@using Memoireclass.Models
@inject UserState UserState

<style>
    .btn{
    background-color: #002855 ;
    color: white;
}
.btn:hover{
    background-color:  #004080 ;
}
.profile-card {
    display: flex;
    flex-direction: column;
    align-items: center; /* This will center content horizontally */
    justify-content: center; /* This will center content vertically */
    text-align: center; /* Center text below the image */
    margin-top: 20px;
}
.profile-img{
    width: 150px;  /* Adjust the width as needed */
    height: 150px; /* Adjust the height as needed */
    border-radius: 50%; /* Optional: Makes the image round */
    object-fit: cover; /* Ensures the image covers the area without stretching */
    margin-bottom: 15px;
}
.modal-overlay {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%,-50%);
padding: 20px;
    background-color: rgba(0, 0, 0, 0.5);
    display: flex;
    border: 1px solid #ccc;
    align-items: center;
    justify-content: center;
    z-index: 999;
}

.modal{
    background-color: #fff;
    border-radius: 10px;
    padding: 25px;
    width: 400px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
}

.modal-buttons {
    margin-top: 20px;
    display: flex;
    justify-content: flex-end;
}
</style>
  @if(user != null){
<div class="profile-container">
    <div class="profile-card">
      
  <!-- Profile Image -->
   
   @if (!string.IsNullOrEmpty(user.PicturePath))
{
    <img src="@($"http://localhost:5110/{user.PicturePath}")" alt="Profile Picture" class="profile-img" width="150" />
}
else
{
    <img src="@UserImage" alt="Profile Picture" class="profile-img" />
 
}


    <h4><strong> @user.FullName </strong></h4>
 
     @if(user.Role == "Administrator" &&  UserState.CurrentUser.Role == "Student"){
        <button class="btn btn-outline-primary">Send Email</button>
     }
     @if(user.Role == "Student" &&  UserState.CurrentUser.Role == "Administrator"){
        <button class="btn btn-outline-primary">Delete This User</button>
     }

   
     <div class="mt-4">
            <p><strong>University:</strong> @user.University</p>
            <p><strong>Major:</strong> @user.Major</p>
            <p><strong>Spe cialty:</strong> @user.Specialty</p>
 
        </div>

       
    </div>

     @if (user.Role == "Administrator")
    {
    <br>
    <hr>
    <br>
  <h2> &nbsp; &nbsp; Theses</h2>
@if (userTheses == null)
{
    <p>Loading...</p>
}
else if (userTheses.Count == 0)
{
    <p>No theses found.</p>
}
else
{
    <div class="grid grid-cols-1 gap-4 m-2">
        @foreach (var memoire in userTheses)
        {<div class="thesis-card p-4 bg-white rounded-xl shadow-lg m-3">
          
<div class="rounded-xl" style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1rem; ">
    <!-- Left: Profile picture and name -->
    <div style="display: flex; align-items: center; gap: 10px;">
        <img src="@($"http://localhost:5110/{memoire.ProfessorPicturePath ?? "emptyimage.jpg"}")"
             alt="Professor"
             style="width: 50px; height: 50px; border-radius: 50%; object-fit: cover;" />

        <h4 style="margin: 0; font-weight: 600;">@memoire.ProfessorName</h4>
    </div>

    <!-- Right: Date -->
    <p style="margin: 0; color: gray; font-size: 0.875rem;">@memoire.Date.ToShortDateString()</p>
</div>
    
            <div class="mb-2">
                <h3 class="text-xl font-semibold">@memoire.Title</h3>
                <p><strong>Field:</strong> @memoire.Field</p>
                <p><strong>Keywords:</strong> @memoire.Keywords</p>
                <p><strong>Author:</strong> @memoire.AuthorName</p>
                <p><strong>Date:</strong> @memoire.Date.ToShortDateString()</p>
                @* <a href="@($"http://localhost:5110/{memoire.FilePath}")" target="_blank" class="text-blue-600 underline">View PDF</a> *@
            </div>
            <div class="mt-3 mb-2">
        <embed src="@($"http://localhost:5110/{memoire.FilePath}")" type="application/pdf" width="100%" height="400px" />
         </div>
         <div class="flex gap-3 justify-end mt-2">
        <button class=" px-4 py-2 rounded btn" >Delete These</button>
      
        <button class="px-4 py-2 rounded btn">Comments</button>
    </div>
    </div>
     <br>
        }
    </div>
}

     }
   
</div>
}


@code {
    [Parameter]
    public int userId { get; set; }

    private User user;
    List<Memoire> userTheses;
    protected override async Task OnInitializedAsync()
    {
        user = await Http.GetFromJsonAsync<User>($"api/users/{userId}");
      userTheses = await Http.GetFromJsonAsync<List<Memoire>>($"api/these/{userId}");
    }



     private string UserImage = "emptyimage.jpg"; // Default image



}
