@page "/Signup"
@layout HomeLayout
@inject HttpClient Http
@using System.Net.Http.Json
@using System.Text.Json
@using System.Net.Http;
@using platformApp.Models
@inject UserState UserState
@inject NavigationManager Navigation 


<body>
    

<header>
        <div class="logo">ThesisHub</div>
        <nav>
            <ul>
                <li><a href="/">Home</a></li>
                <li><a href="/Explore">Browse Theses</a></li>
                <li><a href="/About">About</a></li>
                <li><a href="/Signup" class="btn">Sign Up</a></li>
                <li><a href="/Login" class="btn">Login</a></li>
            </ul>
        </nav>
    </header>
    
    <div class="auth-container">
        <h2>Create an Account</h2>
<br>
         @if (!string.IsNullOrEmpty(message))
{
    <p class="error">@message</p>
} 

       <EditForm Model="newUser" OnValidSubmit="HandleSignup">
        <DataAnnotationsValidator /> 
        <ValidationSummary /> 

            
            <!-- Full Name -->
            <div class="input-group">
                <label for="name" >Full Name</label>
         
                <InputText  @bind-Value="newUser.FullName" style="width: 100%; padding: 10px; border: 1px solid #ccc; border-radius: 5px; font-size: 16px;" id="name"  placeholder="Enter your full name"  required />
            </div>

            <!-- Role Selection -->
            <div class="input-group">
                <label for="role">Sign up as &nbsp; &nbsp; &nbsp; </label>  
       
             
                <select style="width: 100%; padding: 10px; border: 1px solid #ccc; border-radius: 5px; font-size: 16px;" id="role" required @bind="newUser.Role">
                    <option value="" disabled selected>Select your role</option> 
                    <option value="Student">Student</option>
                    <option value="Administrator">Administrator</option>
                </select>
            </div>

            <!-- University -->
            <div class="input-group">
                <label for="university" >University</label>
         
                <InputText style="width: 100%; padding: 10px; border: 1px solid #ccc; border-radius: 5px; font-size: 16px;"  id="university" @bind-Value="newUser.University" placeholder="Enter your university" />
            </div>

            <!-- Major -->
            <div class="input-group">
                <label for="major">Major</label>
               
                <InputText  style="width: 100%; padding: 10px; border: 1px solid #ccc; border-radius: 5px; font-size: 16px;" id="major"  @bind-Value="newUser.Major"  placeholder="Enter your major" />
            </div>

            <!-- Specialty (Optional) -->
            <div class="input-group">
                <label for="specialty">Specialty (Optional)</label>
                @*  *@
                <InputText  style="width: 100%; padding: 10px; border: 1px solid #ccc; border-radius: 5px; font-size: 16px;" id="specialty" @bind-Value="newUser.Specialty" placeholder="Enter your specialty (if any)" />
            </div>

            <!-- Email -->
            <div class="input-group">
                <label for="email">Email</label>
                @*  *@
                <InputText style="width: 100%; padding: 10px; border: 1px solid #ccc; border-radius: 5px; font-size: 16px;"  type="email" id="email" @bind-Value="newUser.Email" placeholder="Enter your email" required />
            </div>

            <!-- Password -->
            <div class="input-group">
               <label for="password">Password</label>
                @*   *@
                <InputText style="width: 100%; padding: 10px; border: 1px solid #ccc; border-radius: 5px; font-size: 16px;" type="password" id="password" @bind-Value="newUser.Password"  placeholder="Create a password" required />
            </div>
             @* *@
            <!-- Submit Button -->
            <button type="submit" class="btn2">Sign Up</button>
            <p class="switch">Already have an account? <a href="/Login">Login</a></p>
       </EditForm>
    </div>
    
</body>



    @code {

public class SignupModel
{
    public string FullName { get; set; }
    public string Role { get; set; }
    public string University { get; set; }
    public string Major { get; set; }
    public string? Specialty { get; set; }
    public string Email { get; set; }
    public string Password { get; set; }
}
    // Instantiate a new User object bound to the form.
     private SignupModel newUser = new SignupModel();
    private string message;
    // This method is executed when the form is validly submitted.
    private async Task HandleSignup()
    {
        message = "Submitting...";
         try
        {
            Console.WriteLine(JsonSerializer.Serialize(newUser));
         

            var response = await Http.PostAsJsonAsync("http://localhost:5110/api/users", newUser);
            if (response.IsSuccessStatusCode)
            {
                // Successfully added user
                Console.WriteLine("User created!");
                 message = "User created successfully!";
                  @* var user = new User
                     {
                      FullName = newUser.FullName,
                      Role = newUser.Role,
                      University = newUser.University,
                         Major = newUser.Major,
                         Specialty = newUser.Specialty,
                      Email = newUser.Email
                        }; *@
    var createdUser = await response.Content.ReadFromJsonAsync<User>();
if (createdUser != null)
{
    UserState.SetUser(createdUser); 
    Navigation.NavigateTo("/profile");
}
else
{
    Console.WriteLine("Failed to read user from response.");
    message = "Signup succeeded but user data could not be loaded.";
}
                 UserState.SetUser(createdUser); 
                 Navigation.NavigateTo("/profile");
            }
            else
            {
                // Handle failure
                var errorDetails = await response.Content.ReadAsStringAsync();
    Console.WriteLine($"Error creating user: {response.StatusCode}");
    Console.WriteLine($"Details: {errorDetails}");
                Console.WriteLine("Error creating user");
                message = $"Error: {response.StatusCode}";
            }
        }
        catch (Exception ex)
        {
            // Log error
            Console.WriteLine($"Error: {ex.Message}");
        }
    }
}



