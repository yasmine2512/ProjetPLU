@page "/Login"
@layout HomeLayout
@inject NavigationManager Navigation 
@inject HttpClient Http
@inject UserState UserState
@using System.Net.Http.Json
@using System.Text.Json
@using System.Net.Http


<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login - ThesisHub</title>
    <link rel="stylesheet" href="./LoginStyle.css">
</head>
<body>
    <header>
        <div class="logo">ThesisHub</div>
        <nav>
            <ul>
                <li><a href="/">Home</a></li>
                <li><a href="/Explore">Browse Theses</a></li>
                <li><a href="/About">About</a></li>
                <li><a href="/Signup" class="btn">Sign Up</a></li>
                <li><a href="/Login" class="btn">Login</a></li>
            </ul>
        </nav>
    </header>
    <div class="auth-container">
        <h2>Login to ThesisHub</h2>

         @if (!string.IsNullOrEmpty(message))
{
    <p>@message</p>
} 

       <EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
     <DataAnnotationsValidator /> 
            <div class="input-group">
                <label for="email">Email</label>
             
              <InputText type="email" style="width: 100%; padding: 10px; border: 1px solid #ccc; border-radius: 5px; font-size: 16px;" id="email" @bind-Value="loginModel.Email"  placeholder="Enter your email" required  /> 
            </div>
            <div class="input-group">
                <label for="password">Password</label>
             
                <InputText type="password" style="width: 100%; padding: 10px; border: 1px solid #ccc; border-radius: 5px; font-size: 16px;" id="password" @bind-Value="loginModel.Password" placeholder="Enter your password" required /> 
            </div>
            <button type="submit" class="btn2">Login</button>
            <p class="switch">Don't have an account? <a href="/Signup">Sign up</a></p>
      </EditForm>
    </div>

</body>

@code {

    public class LoginModel
{
    public string Email { get; set; }
    public string Password { get; set; }
}
    private LoginModel loginModel = new LoginModel();
    private string? message;

    private async Task HandleLogin()
    {
        var response = await Http.PostAsJsonAsync("http://localhost:5110/api/users/login", loginModel);
        if (response.IsSuccessStatusCode)
        {
            var user = await response.Content.ReadFromJsonAsync<User>();
            message = $"Welcome {user.FullName}!";
           
            UserState.SetUser(user);
             Console.WriteLine("Login successful. User set to: " + UserState.CurrentUser.FullName);
             Navigation.NavigateTo("/profile",forceLoad: false);

            // store user info in local storage or redirect
        }
        else
        {
            message = "Login failed. Please check your credentials.";
        }
    }
}

